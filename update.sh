#!/bin/bash
set -Eeuo pipefail

cd "$(dirname "$(readlink -f "$BASH_SOURCE")")"
helperDir='.template-helpers'

images=( "$@" )
if [ ${#images[@]} -eq 0 ]; then
	images=( */ )
fi
images=( "${images[@]%/}" )

replace_field() {
	targetFile="$1"
	field="$2"
	content="$3"
	extraSed="${4:-}"
	sed_escaped_value="$(echo "$content" | sed 's/[\/&]/\\&/g')"
	sed_escaped_value="${sed_escaped_value//$'\n'/\\n}"
	sed -ri -e "s/${extraSed}%%${field}%%${extraSed}/$sed_escaped_value/g" "$targetFile"
}

for image in "${images[@]}"; do
	repo="${image##*/}"
	namespace="${image%$repo}"
	namespace="${namespace%/}"

	# this is used by subscripts to determine whether we're pushing /_/xxx or /r/ARCH/xxx
	# (especialy for "supported tags")
	export ARCH_SPECIFIC_DOCS=
	if [ -n "$namespace" ] && [ -n "${BASHBREW_ARCH:-}" ]; then
		export ARCH_SPECIFIC_DOCS=1
	fi

	if [ -x "$repo/update.sh" ]; then
		( set -x; "$repo/update.sh" "$image" )
	fi

	if [ -e "$repo/content.md" ]; then
		githubRepo="$(cat "$repo/github-repo")"
		maintainer="$(cat "$repo/maintainer.md")"

		issues="$(cat "$repo/issues.md" 2>/dev/null || cat "$helperDir/issues.md")"
		getHelp="$(cat "$repo/get-help.md" 2>/dev/null || cat "$helperDir/get-help.md")"

		license="$(cat "$repo/license.md" 2>/dev/null || true)"
		if [ "$license" ]; then
			license=$'\n\n''# License'$'\n\n'"$license"
		fi

		logo=
		logoFile=
		for f in png svg; do
			if [ -e "$repo/logo.$f" ]; then
				logoFile="$repo/logo.$f"
				break
			fi
		done
		if [ "$logoFile" ]; then
			logoCommit="$(git log -1 --format='format:%H' -- "$logoFile" 2>/dev/null || true)"
			[ "$logoCommit" ] || logoCommit='master'
			if [ "${logoFile##*.}" = 'svg' ]; then
				logo="![logo](https://cdn.rawgit.com/docker-library/docs/$logoCommit/$logoFile)"
			else
				logo="![logo](https://raw.githubusercontent.com/docker-library/docs/$logoCommit/$logoFile)"
			fi
		fi

		stack=
		stackYml=
		stackUrl=
		if [ -f "$repo/stack.yml" ]; then
			stack="$(cat "$repo/stack.md" 2>/dev/null || cat "$helperDir/stack.md")"
			stackYml=$'```yaml\n'"$(cat "$repo/stack.yml")"$'\n```'
			stackCommit="$(git log -1 --format='format:%H' -- "$repo/stack.yml" 2>/dev/null || true)"
			[ "$stackCommit" ] || stackCommit='master'
			stackUrl="https://raw.githubusercontent.com/docker-library/docs/$stackCommit/$repo/stack.yml"
		fi

		compose=
		composeYml=
		if [ -f "$repo/docker-compose.yml" ]; then
			compose="$(cat "$repo/compose.md" 2>/dev/null || cat "$helperDir/compose.md")"
			composeYml=$'```yaml\n'"$(cat "$repo/docker-compose.yml")"$'\n```'
		fi

		deprecated=
		if [ -f "$repo/deprecated.md" ]; then
			deprecated=$'# **DEPRECATED**\n\n'
			deprecated+="$(cat "$repo/deprecated.md")"
			deprecated+=$'\n\n'
		fi

		targetFile="$repo/README.md"

		{
			cat "$helperDir/autogenerated-warning.md"
			echo
			echo -n "$deprecated"
			cat "$helperDir/template.md"
		} > "$targetFile"

		echo '  TAGS => generate-dockerfile-links-partial.sh "'"$repo"'"'
		partial="$("$helperDir/generate-dockerfile-links-partial.sh" "$repo")"
		[ "$partial" ]
		replace_field "$targetFile" 'TAGS' "$partial"

		echo '  CONTENT => '"$repo"'/content.md'
		replace_field "$targetFile" 'CONTENT' "$(cat "$repo/content.md")"

		echo '  VARIANT => variant.sh'
		replace_field "$targetFile" 'VARIANT' "$("$helperDir/variant.sh" "$repo")"

		# has to be after CONTENT because it's contained in content.md
		echo "  LOGO => $logo"
		replace_field "$targetFile" 'LOGO' "$logo" '\s*'

		echo '  STACK => '"$repo"'/stack.md'
		replace_field "$targetFile" 'STACK' "$stack"
		echo '  STACK-YML => '"$repo"'/stack.yml'
		replace_field "$targetFile" 'STACK-YML' "$stackYml"
		echo '  STACK-URL => '"$repo"'/stack.yml'
		replace_field "$targetFile" 'STACK-URL' "$stackUrl"

		echo '  COMPOSE => '"$repo"'/compose.md'
		replace_field "$targetFile" 'COMPOSE' "$compose"
		echo '  COMPOSE-YML => '"$repo"'/docker-compose.yml'
		replace_field "$targetFile" 'COMPOSE-YML' "$composeYml"

		echo '  LICENSE => '"$repo"'/license.md'
		replace_field "$targetFile" 'LICENSE' "$license"

		echo '  ISSUES => "'"$issues"'"'
		replace_field "$targetFile" 'ISSUES' "$issues"

		echo '  GET-HELP => "'"$getHelp"'"'
		replace_field "$targetFile" 'GET-HELP' "$getHelp"

		echo '  MAINTAINER => "'"$maintainer"'"'
		replace_field "$targetFile" 'MAINTAINER' "$maintainer"

		echo '  IMAGE => "'"$image"'"'
		replace_field "$targetFile" 'IMAGE' "$image"

		echo '  REPO => "'"$repo"'"'
		replace_field "$targetFile" 'REPO' "$repo"

		echo '  GITHUB-REPO => "'"$githubRepo"'"'
		replace_field "$targetFile" 'GITHUB-REPO' "$githubRepo"

		echo
	else
		echo >&2 "skipping $repo: missing repo/content.md"
	fi
done
